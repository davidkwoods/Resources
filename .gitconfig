[core]
    gc = true
    editor = 'C:\\Program Files (x86)\\Notepad++\\notepad++.exe' -multiInst -nosession -noPlugin
	attributesfile = C:\\Users\\dwoo\\.gitattributes
# This pager line sets diff output to utf8
    pager = LESSCHARSET=utf-8 less -R
    autocrlf = true
[user]
    name = David Woods
    email = ***@hotmail.com
[push]
    default = upstream
[credential]
    helper = manager
[commit]
	cleanup = scissors
[rebase]
    useBuiltin = true
[stash]
    useBuiltin = true

[diff]
    tool = vsdiffmerge
    renameLimit = 1000000
[merge]
    tool = semanticmerge
    renameLimit = 1000000
[difftool]
    prompt = false
[difftool "semanticmerge"]
    cmd = \"C:\\Users\\dwoo\\AppData\\Local\\semanticmerge\\semanticmergetool.exe\" -s \"$LOCAL\" -d \"$REMOTE\"
[difftool "odd"]
    cmd = odd $LOCAL $REMOTE
    keepBackup = false
    trustExitCode = true
[difftool "bc"]
    path = C:\\Program Files\\Beyond Compare 4\\BComp.exe
    keepBackup = false
    trustExitCode = true
[difftool "vsdiffmerge"]
    cmd = \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\vsdiffmerge.exe\" \"$LOCAL\" \"$REMOTE\" //t
    keepbackup = false

[mergetool]
#    prompt = false
    keepbackup = false
[mergetool "semanticmerge"]
    cmd = \"C:\\Users\\dwoo\\AppData\\Local\\semanticmerge\\semanticmergetool.exe\" -s \"$LOCAL\" -d \"$REMOTE\" -b \"$BASE\" -r \"$MERGED\"
    trustexitcode = true
[mergetool "xmerge"]
    cmd = \"C:\\Users\\dwoo\\AppData\\Local\\semanticmerge\\mergetool.exe\" -s=\"$LOCAL\" -d=\"$REMOTE\" -b=\"$BASE\" -r=\"$MERGED\"
    trustexitcode = true
[mergetool "bc"]
    path = C:\\Program Files\\Beyond Compare 4\\BComp.exe
    keepBackup = false
    trustExitCode = true

[alias]
    dift = difftool -d -t odd
    diftc = difftool -d -t odd --cached
    diffit = !sh -c 'git difftool -d -t odd ${1-HEAD}^ ${1-HEAD}' -
    difs = diff -M --stat=170 --dirstat
    dif = diff -M --color-words
    difc = diff -M --cached --color-words
    difm = diff -M --color-moved
    difcm = diff -M --cached --color-moved
    difcs = diff -M --cached --stat=170 --dirstat
    sub = submodule update
    wipe = reset --hard
    nuke = "!git scorch ; git reset --hard HEAD@{u}"
    scorch = clean -dxf -e /**/.vs*/ -e /**/*.lock.json -e /**/*.nuget.targets -e /**/project.json
    scorchh = clean -dxf -e /**/.vs*/ -e /**/*.lock.json -e /**/*.nuget.targets -e /**/project.json -e /Binaries/
    fa = fetch --all
    fp = fetch --prune
    fap = fetch --all --prune
    fpa = fetch --all --prune
    fpp = "!git fetch --prune self ; git fetch --prune origin"
    fpm = "!git fetch --prune ; git merge --ff-only HEAD@{u}"
    fppm = "!git fetch --prune self ; git fetch --prune origin && git merge --ff-only HEAD@{u}"
    fpam = "!git fetch --prune --all ; git merge --ff-only HEAD@{u}"
    fapm = "!git fetch --prune --all ; git merge --ff-only HEAD@{u}"
    fpr = "!git fetch --prune ; git rebase"
    fppr = "!git fetch --prune self ; git fetch --prune origin && git rebase"
    fpar = "!git fetch --prune --all ; git rebase"
    fapr = "!git fetch --prune --all ; git rebase"
    mu = merge HEAD@{u}
    muf = !sh -c 'git branch -f ${1} ${1}@\\{u\\}' -
    pp = pull --prune
    stat = status --short --branch
    br = "!git branch ; echo ; git branch -r"
    brc = branch --all --contains
    brp = "!git branch ; echo ; git branch -r --list laptop/* ; git branch -r --list self/* ; git branch -r --list origin/feature/* ; git branch -r --list origin/release/* ; git branch -r --list origin/personal/dwoo/*"
    bv = branch -vv
    tc = tag --contains
    btc = "!sh -c 'git branch --all --contains ${1}; echo; echo "Tags:"; git tag --contains ${1}' -"
    sb = show-branch --current --sha1-name
    count = "!sh -c 'echo ${1-HEAD@\\{u\\}}...${2-HEAD}; git rev-list --left-right --count ${1-HEAD@\\{u\\}}...${2-HEAD}' -"
    countleft = !sh -c 'git rev-list --count ${1} ^${2}' -
    countright = !sh -c 'git rev-list --count ^${1} ${2}' -
    sh = show -M --word-diff=color --pretty=mysummary
    shs = show -M --shortstat --pretty=mysummary
    shd = show -M --dirstat --pretty=mysummary
    shss = show -M --name-status --pretty=mysummary
    shf = show -M --stat=170 --dirstat  --pretty=mysummary
    unignored = ls-files -i --exclude-standard
    ignored = clean -ndx
    ignoredd = ls-files --others -i --exclude-standard
    amend = !sh -c 'git commit --amend ${1+-m} \"${1---reuse-message=HEAD}\"' -
    l = shortlog -sne
    anchor = branch --no-track
    mergebc = mergetool --tool bc
    xmerge = mergetool -t xmerge

    follow  = log --follow --date=format-local:%c --format=logone
    follow2 = log --follow --date=format-local:%c --format=logtwo
    follow3 = log --follow --date=format-local:%c --format=logthree
    followw  = log --follow --date=format-local:%c --format=logone --all
    followw2 = log --follow --date=format-local:%c --format=logtwo --all
    followw3 = log --follow --date=format-local:%c --format=logthree --all

    lg   = log --graph --date=format-local:%c -M -i --format=logone
    lg2  = log --graph --date=format-local:%c -M -i --format=logtwo
    lg3  = log --graph --date=format-local:%c -M -i --format=logthree
    lgf   = log --graph --date=format-local:%c -M -i --format=logone --first-parent
    lgf2  = log --graph --date=format-local:%c -M -i --format=logtwo --first-parent
    lgf3  = log --graph --date=format-local:%c -M -i --format=logthree --first-parent
    lgg  = log --graph --date=format-local:%c -M -i --format=logone --all
    lgg2 = log --graph --date=format-local:%c -M -i --format=logtwo --all
    lgg3 = log --graph --date=format-local:%c -M -i --format=logthree --all
    lggf  = log --graph --date=format-local:%c -M -i --format=logone --all --first-parent
    lggf2 = log --graph --date=format-local:%c -M -i --format=logtwo --all --first-parent
    lggf3 = log --graph --date=format-local:%c -M -i --format=logthree --all --first-parent
    lgu  = !sh -c 'git log --graph --date=format-local:%c -M -i --format=logone ${1-HEAD}@{u}' -
    lgu2 = !sh -c 'git log --graph --date=format-local:%c -M -i --format=logtwo ${1-HEAD}@{u}' -
    lgu3 = !sh -c 'git log --graph --date=format-local:%c -M -i --format=logthree ${1-HEAD}@{u}' -
    
    lgcolors = log --graph --date=format-local:%c -M -i --format=colortest

[pretty]
    logone = format:%C(bold blue)%h%C(bold cyan)%d%C(reset) - %C(dim white)(%ar)%C(reset) %C(bold white)%s%C(reset) %C(dim white)- %an%C(reset)
    logtwo = format:%C(bold blue)%h%C(bold cyan)%d%C(reset) - %C(bold green)%ad%C(reset) %C(dim white)(%ar)%C(reset)%n          %C(bold white)%s%C(reset) %C(dim white)- %an%C(reset)
    logthree = format:%C(bold blue)%h%C(bold cyan)%d%C(reset) - %C(bold green)%ad%C(reset) %C(dim white)(%ar)%C(reset) %C(green)(committed: %cd)%C(reset)%n          %C(bold white)%s%C(reset)%n          %C(bold white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)
    mysummary = format:%C(bold blue) %H%n%C(bold cyan)%d%n %C(bold green)%aI%C(reset) %C(dim white)(%ar)%C(reset) %C(green)(committed: %cd)%n %C(bold white)%an <%ae> %C(dim white)(committer: %cn <%ce>)%n%n%C(bold white)%s%n%+b%C(reset)
    colortest = format:%C(bold white)bold white %C(dim)dim white %C(bold normal)bold normal %C(dim)dim normal %C(bold black)bold black %C(dim)dim black%n%C(bold red)bold red %C(dim)dim red %C(bold green)bold green %C(dim)dim green %C(bold yellow)bold yellow %C(dim)dim yellow%n%C(bold blue)bold blue %C(dim)dim blue %C(bold magenta)bold magenta %C(dim)dim magenta %C(bold cyan)bold cyan %C(dim)dim cyan%Creset

#    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
#    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
#    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
