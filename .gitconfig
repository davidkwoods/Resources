[core]
	autocrlf = false
	editor = 'C:\\Program Files (x86)\\Notepad++\\notepad++.exe' -multiInst -nosession -noPlugin
[user]
	name = David Woods
	email = ***@hotmail.com
[github]
	user = ***
	token = ***
[merge]
  tool = p4merge
[mergetool "p4merge"]
	cmd = "p4merge.exe $BASE $LOCAL $REMOTE $MERGED"
[mergetool "SemanticMerge"]
  path = C:\\Users\\David\\AppData\\Local\\PlasticSCM4\\semanticmerge\\semanticmergetool.exe
  keepBackup = false
  trustExitCode = false
  cmd = \"C:\\Users\\David\\AppData\\Local\\PlasticSCM4\\semanticmerge\\semanticmergetool.exe\" -b=\"$BASE\" -d=\"$LOCAL\" -s=\"$REMOTE\" -r=\"$MERGED\" -l=csharp -emt=\"mergetool.exe -b=\"\"@basefile\"\" -bn=\"\"@basesymbolic\"\" -s=\"\"@sourcefile\"\" -sn=\"\"@sourcesymbolic\"\" -d=\"\"@destinationfile\"\" -dn=\"\"@destinationsymbolic\"\" -r=\"\"@output\"\" -t=\"\"@filetype\"\" -i=\"\"@comparationmethod\"\" -e=\"\"@fileencoding\"\"\" -edt=\"mergetool.exe  -s=\"\"@sourcefile\"\" -sn=\"\"@sourcesymbolic\"\" -d=\"\"@destinationfile\"\" -dn=\"\"@destinationsymbolic\"\" -t=\"\"@filetype\"\" -i=\"\"@comparationmethod\"\" -e=\"\"@fileencoding\"\"\"
[diff]
	tool = p4merge
[difftool "p4merge"]
	cmd = "p4merge.exe $LOCAL $REMOTE"
[difftool "SemanticMerge"]
  path = C:\\Users\\David\\AppData\\Local\\PlasticSCM4\\semanticmerge\\semanticmergetool.exe
  cmd = \"C:\\Users\\David\\AppData\\Local\\PlasticSCM4\\semanticmerge\\semanticmergetool.exe\" -s=$LOCAL -d=$REMOTE
[push]
	default = simple
[credential]
	helper = !'C:\\Users\\David\\AppData\\Roaming\\GitCredStore\\git-credential-winstore.exe'
[alias]
    dift = difftool -t semanticmerge
    diftc = difftool -t semanticmerge --cached
    difs = diff -M --stat=170
    dif = diff -M --color-words
    difc = diff -M --cached --color-words
    difcs = diff -M --cached --stat=170
    sub = submodule update
    wipe = reset --hard
    fa = fetch --all
    fp = fetch --prune
    fap = fetch --all --prune
    fpa = fetch --all --prune
    mu = merge HEAD@{u}
    fpp = !git fetch --prune self || git fetch --prune origin
    fpm = !git fetch --prune || git merge --ff-only HEAD@{u}
    fppm = !git fetch --prune self && git fetch --prune origin && git merge --ff-only HEAD@{u}
    fpam = !git fetch --prune --all || git merge --ff-only HEAD@{u}
    fapm = !git fetch --prune --all || git merge --ff-only HEAD@{u}
    pp = pull --prune
    stat = status --short --branch
    br = !git branch && echo && git branch -r
    brc = branch --all --contains
    brp = !git branch && echo && git branch -r --list laptop/* && git branch -r --list self/* && git branch -r --list origin/feature/* && git branch -r --list origin/personal/dwoo/*
    sb = show-branch --current
    count = !sh -c 'git rev-list --left-right --count ${1-HEAD@\\{u\\}}...${2-HEAD}' -
    sh = show -M --word-diff=color
    shs = show -M --shortstat
    shd = show -M --dirstat
    shss = show -M --name-status
    shf = show -M --stat=170
    unignored = ls-files -i --exclude-standard
    ignored = clean -ndx
    ignoredd = ls-files --others -i --exclude-standard
    scorch = clean -dxf -e /.vs*/
    scorchh = clean -dxf -e /.vs*/ -e /Binaries/
    amend = !sh -c 'git commit --amend ${1+-m} \"${1---reuse-message=HEAD}\"' -

    lg   = log --graph --abbrev-commit --decorate --date=format-local:%c -M --format=logone
    lg2  = log --graph --abbrev-commit --decorate --date=format-local:%c -M --format=logtwo
    lg3  = log --graph --abbrev-commit --decorate --date=format-local:%c -M --format=logthree
    lgg  = log --graph --abbrev-commit --decorate --date=format-local:%c -M --format=logone --all
    lgg2 = log --graph --abbrev-commit --decorate --date=format-local:%c -M --format=logtwo --all
    lgg3 = log --graph --abbrev-commit --decorate --date=format-local:%c -M --format=logthree --all

[pretty]
    logone = format:%C(cyan)%h%C(bold cyan)%d%C(reset) - %C(dim white)(%ar)%C(reset) %C(bold white)%s%C(reset) %C(dim white)- %an%C(reset)
    logtwo = format:%C(cyan)%h%C(bold cyan)%d%C(reset) - %C(bold green)%ad%C(reset) %C(dim white)(%ar)%C(reset)%n          %C(bold white)%s%C(reset) %C(dim white)- %an%C(reset)
    logthree = format:%C(cyan)%h%C(bold cyan)%d%C(reset) - %C(bold green)%ad%C(reset) %C(dim white)(%ar)%C(reset) %C(green)(committed: %cd)%C(reset)%n          %C(bold white)%s%C(reset)%n          %C(bold white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)

#    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
#    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
#    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
